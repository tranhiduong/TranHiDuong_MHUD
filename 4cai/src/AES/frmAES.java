/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AES;

/**
 *
 * @author hoang hiep
 */
import java.awt.FileDialog;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.security.Key;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
public class frmAES extends javax.swing.JFrame {

    /**
     * Creates new form frmAES
     */
    public frmAES() {
        initComponents();
        aes = new classAES();
    }
    private  classAES aes;
    private Key key;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        txtChuoi = new javax.swing.JTextField();
        txtFile = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnBw = new javax.swing.JButton();
        rdbFile = new javax.swing.JRadioButton();
        btnMahoa = new javax.swing.JButton();
        rdbChuoi = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtFileMH = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnBWMH = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnKey = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtKey = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnGiaima = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("File:");

        jLabel1.setText("Chuỗi:");

        btnBw.setText("...");
        btnBw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBwActionPerformed(evt);
            }
        });

        rdbFile.setText("File");
        rdbFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbFileActionPerformed(evt);
            }
        });

        btnMahoa.setText("Mã hóa");
        btnMahoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMahoaActionPerformed(evt);
            }
        });

        rdbChuoi.setText("Chuỗi");

        jLabel4.setText("File mã hóa");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 713, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        btnBWMH.setText("...");
        btnBWMH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBWMHActionPerformed(evt);
            }
        });

        jLabel2.setText("Mã hóa");

        btnKey.setText("...");
        btnKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeyActionPerformed(evt);
            }
        });

        jLabel6.setText("Giải mã");

        jLabel5.setText("key giải mã");

        btnGiaima.setText("Giải mã");
        btnGiaima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiaimaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(54, 54, 54)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel3))
                            .addGap(21, 21, 21)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtFile, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnBw))
                                .addComponent(txtChuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(45, 45, 45)
                                    .addComponent(rdbFile, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(rdbChuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnMahoa))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtFileMH, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnBWMH))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtKey, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnKey)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGiaima)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(btnMahoa))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnBw)
                                .addComponent(jLabel3))
                            .addComponent(rdbFile, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdbChuoi)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtChuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)))))
                .addGap(32, 32, 32)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtFileMH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBWMH))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKey)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnGiaima)))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBwActionPerformed
        // TODO add your handling code here:
        File file = getFileDialogOpen("*.*");
        if(file== null)
        return;
        txtFile.setText(file.getAbsolutePath());
    }//GEN-LAST:event_btnBwActionPerformed

    private void rdbFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbFileActionPerformed

    private void btnMahoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMahoaActionPerformed
        // TODO add your handling code here:
        if(rdbFile.isSelected()==true){
            File file = new File( txtFile.getText());
            byte[]data = readByteFile(file);
            data = aes.EnCrypt(data);
            if(writeByFile(file.getAbsolutePath()+".mahoa.txt", data)&&
                writeObjectFile(file.getAbsolutePath()+".key.txt",aes.getKey()))
            {
                file.delete();
                JOptionPane.showMessageDialog(null, "File mã hóa: "+file.getName()+".mahoa.txt\n"+
                    "Key giải mã: "+file.getName()+".key.txt\n", "Done",JOptionPane.INFORMATION_MESSAGE);
            }
        }else if(rdbChuoi.isSelected()==true){
            byte[]data= txtChuoi.getText().getBytes();
            data = aes.EnCrypt(data);
            if(writeByFile1(data)&&writeObjectFile1(aes.getKey()))
            {
                JOptionPane.showMessageDialog(null, "File mã hóa: "+"NewFile"+".mahoa.txt\n"+
                    "Key giải mã: "+"NewFile"+".key.txt\n", "Done",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        txtFile.setText("");
        txtChuoi.setText("");
    }//GEN-LAST:event_btnMahoaActionPerformed

    private void btnBWMHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBWMHActionPerformed
        // TODO add your handling code here:
        File file = getFileDialogOpen("*.mahoa.txt");
        if(file == null) return;
        txtFileMH.setText(file.getAbsolutePath());
    }//GEN-LAST:event_btnBWMHActionPerformed

    private void btnKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeyActionPerformed
        // TODO add your handling code here:
        File file = getFileDialogOpen("*.key.txt");
        if(file == null)return;
        txtKey.setText(file.getAbsolutePath());
    }//GEN-LAST:event_btnKeyActionPerformed

    private void btnGiaimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiaimaActionPerformed
        // TODO add your handling code here:
        File file = new File(txtFileMH.getText());
        File keyfile = new File(txtKey.getText());
        if(!file.exists()){
            JOptionPane.showMessageDialog(null, "File mã hóa không tồn tại hoặc không thể truy cập",
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!keyfile.exists()){
            JOptionPane.showMessageDialog(null, "Key không tồn tại hoặc không thể truy cập",
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        byte [] data = readByteFile(file);
        Key keys =(Key) readObjectFile(keyfile);
        data = aes.DeCrypt(data, keys);
        String filename = file.getAbsolutePath().
        substring(0,file.getAbsolutePath().length()-9);
        if(writeByFile(filename, data)){
            file.delete();
            keyfile.delete();
            JOptionPane.showMessageDialog(null, "Giải mã thành công",
                "Done",JOptionPane.INFORMATION_MESSAGE);
            txtFileMH.setText("");
            txtKey.setText("");
        }
    }//GEN-LAST:event_btnGiaimaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAES().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBWMH;
    private javax.swing.JButton btnBw;
    private javax.swing.JButton btnGiaima;
    private javax.swing.JButton btnKey;
    private javax.swing.JButton btnMahoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton rdbChuoi;
    private javax.swing.JRadioButton rdbFile;
    private javax.swing.JTextField txtChuoi;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtFileMH;
    private javax.swing.JTextField txtKey;
    // End of variables declaration//GEN-END:variables

    private File getFileDialogOpen(String string) {
        FileDialog fd = new FileDialog(this, "Chọn file", FileDialog.LOAD);
        fd.setFile(string);
        fd.setVisible(true);
        if (fd.getFile()==null) {
            return null;
        }
        File file = new File(fd.getDirectory()+fd.getFile());
        if(!file.canRead()){
            JOptionPane.showMessageDialog(null, "File bạn chọn không thể đọc.",
                    "Error",JOptionPane.ERROR_MESSAGE);
            return null;
        }
        return file;
    }
   
    private byte[] readByteFile(File file) {
        byte[] data=null;
        try {
            FileInputStream fi = new FileInputStream(file);
            int c,i=0;
            data = new byte[(int)file.length()];
            while((c = fi.read())!=-1)
            {
                data[i++] = (byte)c;
            }
            fi.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, file.getName()+" không thể đọc file",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return null;
        }
        return data;
    }
    private boolean writeByFile(String fileName, byte[]data){
        File file = new File(fileName);
        if(!file.canWrite()){
            try {
                file.createNewFile();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Không thể tạo file "+file.getName(),
                        "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        try {
            FileOutputStream fo = new FileOutputStream(file);
            fo.write(data);
            fo.close();
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Không thể ghi file "+file.getName(),
                    "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    private boolean writeByFile1( byte[]data){
        File file = new File("C:\\Users\\hoang\\OneDrive\\Desktop\\Newfile.mahoa.txt");
        if(!file.canWrite()){
            try {
                file.createNewFile();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Không thể tạo file "+file.getName(),
                        "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        try {
            FileOutputStream fo = new FileOutputStream(file);
            fo.write(data);
            fo.close();
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Không thể ghi file "+file.getName(),
                    "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    private Object readObjectFile(File file){
        Object obj;
        try {
            ObjectInputStream ois = new ObjectInputStream(new FileInputStream(file));
            obj = (Object)ois.readObject();
            ois.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Không thể đọc được file "+file.getName(),
                    "Error", JOptionPane.ERROR_MESSAGE);
            return null;
        }
        
        return obj;
    }
    private boolean writeObjectFile(String filename, Object data){
        File file = new File(filename);
        if(!file.canWrite()){
            try {
                file.createNewFile();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Không thể tạo được file "+file.getName(),
                        "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        try {
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(file));
            oos.writeObject(data);
            oos.close();
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Không thể ghi dữ liệu lên file "+ file.getName(),
                    "Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    private boolean writeObjectFile1( Object data){
        File file = new File("C:\\Users\\hoang\\OneDrive\\Desktop\\Newfile.key.txt");
        if(!file.canWrite()){
            try {
                file.createNewFile();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Không thể tạo được file "+file.getName(),
                        "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        try {
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(file));
            oos.writeObject(data);
            oos.close();
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Không thể ghi dữ liệu lên file "+ file.getName(),
                    "Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
 
 
    private void fetchChild(File file) {
        if (file.isDirectory()) {
 
            File[] children = file.listFiles();
 
            for (File child : children) {
               
                this.fetchChild(child);
            }
        }
 
    }
}
